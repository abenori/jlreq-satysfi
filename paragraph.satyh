@import: font
@require: base/length

module JLReqParagraph : sig
  val set-paragraph-top-text : inline-boxes -> unit
  val get-paragraph-top-text : inline-boxes
  val set-skip-last-fil : bool -> unit
  val paragraph-scheme : (|
    indent : jlreq-length
  |) -> context -> inline-text -> block-boxes


end = struct

let-mutable ref-paragraph-text <- inline-nil
let-mutable ref-skip-last-fil <- false

let set-paragraph-top-text txt = ref-paragraph-text <- txt
let set-skip-last-fil b = ref-skip-last-fil <- b
let get-paragraph-top-text = !ref-paragraph-text

let paragraph-scheme opt ctx txt =
  let len = JLReqFont.to-length opt#indent in
  let ib = !ref-paragraph-text in
  let mainb = read-inline ctx txt in
  let () = ref-paragraph-text <- inline-nil in
  let skip-last = !ref-skip-last-fil in
  let () = ref-skip-last-fil <- false in
  let (w,_,_) = get-natural-metrics ib in
  line-break true true ctx (
    (if Length.(w == 0pt) then (inline-skip len) else inline-nil)
    ++ ib ++ mainb
    ++ (if skip-last then inline-nil else inline-fil)
  )

end
